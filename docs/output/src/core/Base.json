{
    "classData": [
        {
            "comment": "/**\n * The base class for all classes inside the Neo namespace\n * @class Neo.core.Base\n */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 6,
                "columnno": 0,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {}
            },
            "description": "The base class for all classes inside the Neo namespace",
            "kind": "class",
            "name": "Base",
            "memberof": "Neo.core",
            "longname": "Neo.core.Base",
            "scope": "static",
            "$longname": "Neo.core.Base",
            "$kind": "class",
            "id": 562,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * The return value will get applied to the class constructor\n     * @returns {Object} staticConfig\n     * @tutorial 02_ClassSystem\n     */",
            "meta": {
                "range": [
                    397,
                    737
                ],
                "filename": "Base.mjs",
                "lineno": 16,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021025",
                    "name": "Base.getStaticConfig",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "The return value will get applied to the class constructor",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "staticConfig"
                }
            ],
            "tutorials": [
                "02_ClassSystem"
            ],
            "name": "getStaticConfig",
            "longname": "Base.getStaticConfig",
            "kind": "function",
            "memberof": "Base",
            "scope": "static",
            "params": [],
            "$longname": "Base.getStaticConfig",
            "$kind": "method",
            "id": 563,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n         * Set this one to false in case you don't want to stick\n         * to the \"anti-pattern\" to apply classes to the global Neo or App namespace\n         * @member {Boolean} registerToGlobalNs=true\n         * @private\n         * @static\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 24,
                "columnno": 8,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {}
            },
            "description": "Set this one to false in case you don't want to stick<br />to the \"anti-pattern\" to apply classes to the global Neo or App namespace",
            "kind": "member",
            "name": "registerToGlobalNs",
            "type": {
                "names": [
                    "Boolean"
                ]
            },
            "defaultvalue": true,
            "access": "private",
            "scope": "static",
            "longname": "registerToGlobalNs",
            "$longname": "registerToGlobalNs",
            "$kind": "property",
            "id": 564,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * The return value will get applied to each class instance\n     * @returns {Object} staticConfig\n     * @tutorial 02_ClassSystem\n     */",
            "meta": {
                "range": [
                    893,
                    1539
                ],
                "filename": "Base.mjs",
                "lineno": 32,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021033",
                    "name": "Base.getConfig",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "The return value will get applied to each class instance",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "staticConfig"
                }
            ],
            "tutorials": [
                "02_ClassSystem"
            ],
            "name": "getConfig",
            "longname": "Base.getConfig",
            "kind": "function",
            "memberof": "Base",
            "scope": "static",
            "params": [],
            "$longname": "Base.getConfig",
            "$kind": "method",
            "id": 565,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n         * The class name which will get mapped into the Neo or app namespace\n         * @member {String} className='Neo.core.Base'\n         * @private\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 38,
                "columnno": 8,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {}
            },
            "description": "The class name which will get mapped into the Neo or app namespace",
            "kind": "member",
            "name": "className",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'Neo.core.Base'",
            "access": "private",
            "longname": "className",
            "scope": "global",
            "$longname": "className",
            "$kind": "property",
            "id": 566,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n         * The class shortcut-name to use for e.g. creating child components inside a JSON-format\n         * @member {String} ntype='base'\n         * @private\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 44,
                "columnno": 8,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {}
            },
            "description": "The class shortcut-name to use for e.g. creating child components inside a JSON-format",
            "kind": "member",
            "name": "ntype",
            "type": {
                "names": [
                    "String"
                ]
            },
            "defaultvalue": "'base'",
            "access": "private",
            "longname": "ntype",
            "scope": "global",
            "$longname": "ntype",
            "$kind": "property",
            "id": 567,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n         * Add mixins as an array of classNames, imported modules or a mixed version\n         * @member {String[]|Neo.core.Base[]|null} mixins=null\n         */",
            "meta": {
                "filename": "Base.mjs",
                "lineno": 49,
                "columnno": 8,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {}
            },
            "description": "Add mixins as an array of classNames, imported modules or a mixed version",
            "kind": "member",
            "name": "mixins",
            "type": {
                "names": [
                    "Array.<String>",
                    "Array.<Neo.core.Base>",
                    "null"
                ]
            },
            "defaultvalue": null,
            "longname": "mixins",
            "scope": "global",
            "$longname": "mixins",
            "$kind": "property",
            "id": 568,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Consumes the static getConfig() object\n     * Applies the observable mixin if needed, grants remote access if needed\n     * @param {Object} config\n     */",
            "meta": {
                "range": [
                    1715,
                    2825
                ],
                "filename": "Base.mjs",
                "lineno": 57,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021045",
                    "name": "Base",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "config"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Consumes the static getConfig() object<br />Applies the observable mixin if needed, grants remote access if needed",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "config"
                }
            ],
            "name": "Base",
            "longname": "Base",
            "kind": "class",
            "scope": "global",
            "$longname": "Base",
            "$kind": "constructor",
            "id": 569,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Gets triggered after all constructors are done\n     * @tutorial 02_ClassSystem\n     */",
            "meta": {
                "range": [
                    2933,
                    2951
                ],
                "filename": "Base.mjs",
                "lineno": 108,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021193",
                    "name": "Base#onConstructed",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Gets triggered after all constructors are done",
            "tutorials": [
                "02_ClassSystem"
            ],
            "name": "onConstructed",
            "longname": "Base#onConstructed",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#onConstructed",
            "$kind": "method",
            "id": 570,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Gets triggered after onConstructed is done\n     * @see {@link Neo.core.Base#onConstructed onConstructed}\n     * @tutorial 02_ClassSystem\n     */",
            "meta": {
                "range": [
                    3117,
                    3126
                ],
                "filename": "Base.mjs",
                "lineno": 115,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021197",
                    "name": "Base#init",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Gets triggered after onConstructed is done",
            "see": [
                "{@link Neo.core.Base#onConstructed onConstructed}"
            ],
            "tutorials": [
                "02_ClassSystem"
            ],
            "name": "init",
            "longname": "Base#init",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#init",
            "$kind": "method",
            "id": 571,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     *\n     * @param {Function} fn\n     * @param {String} key\n     * @param {*} oldValue\n     */",
            "meta": {
                "range": [
                    3237,
                    3519
                ],
                "filename": "Base.mjs",
                "lineno": 123,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021201",
                    "name": "Base#addToAfterSetQueue",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "fn",
                        "key",
                        "oldValue"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "params": [
                {
                    "type": {
                        "names": [
                            "function"
                        ]
                    },
                    "name": "fn"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "name": "key"
                },
                {
                    "type": {
                        "names": [
                            "*"
                        ]
                    },
                    "name": "oldValue"
                }
            ],
            "name": "addToAfterSetQueue",
            "longname": "Base#addToAfterSetQueue",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#addToAfterSetQueue",
            "$kind": "method",
            "id": 572,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Convenience method for beforeSet functions which test if a given value is inside a static array\n     * @param {String|Number} value\n     * @param {String|Number} oldValue\n     * @param {String} name config name\n     * @param {String} [staticName=name + 's'] name of the static config array\n     */",
            "meta": {
                "range": [
                    3838,
                    4164
                ],
                "filename": "Base.mjs",
                "lineno": 142,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021236",
                    "name": "Base#beforeSetEnumValue",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "value",
                        "oldValue",
                        "name",
                        "staticName"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Convenience method for beforeSet functions which test if a given value is inside a static array",
            "params": [
                {
                    "type": {
                        "names": [
                            "String",
                            "Number"
                        ]
                    },
                    "name": "value"
                },
                {
                    "type": {
                        "names": [
                            "String",
                            "Number"
                        ]
                    },
                    "name": "oldValue"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "config name",
                    "name": "name"
                },
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "optional": true,
                    "defaultvalue": "name + 's'",
                    "description": "name of the static config array",
                    "name": "staticName"
                }
            ],
            "name": "beforeSetEnumValue",
            "longname": "Base#beforeSetEnumValue",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#beforeSetEnumValue",
            "$kind": "method",
            "id": 573,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Unregisters this instance from Neo.manager.Instance\n     * and removes all object entries from this instance\n     */",
            "meta": {
                "range": [
                    4689,
                    4956
                ],
                "filename": "Base.mjs",
                "lineno": 177,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021353",
                    "name": "Base#destroy",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Unregisters this instance from Neo.manager.Instance<br />and removes all object entries from this instance",
            "name": "destroy",
            "longname": "Base#destroy",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#destroy",
            "$kind": "method",
            "id": 574,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Returns the value of a static config key or the staticConfig object itself in case no value is set\n     * @param {String} [key] The key of a staticConfig defined inside static getStaticConfig\n     * @returns {*}\n     */",
            "meta": {
                "range": [
                    5197,
                    5313
                ],
                "filename": "Base.mjs",
                "lineno": 195,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021401",
                    "name": "Base#getStaticConfig",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns the value of a static config key or the staticConfig object itself in case no value is set",
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "optional": true,
                    "description": "The key of a staticConfig defined inside static getStaticConfig",
                    "name": "key"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "*"
                        ]
                    }
                }
            ],
            "name": "getStaticConfig",
            "longname": "Base#getStaticConfig",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#getStaticConfig",
            "$kind": "method",
            "id": 575,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Applies all class configs to this instance\n     * @param {Object} config\n     * @param {Boolean} [preventOriginalConfig] True prevents the instance from getting an originalConfig property\n     */",
            "meta": {
                "range": [
                    5530,
                    5691
                ],
                "filename": "Base.mjs",
                "lineno": 205,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021421",
                    "name": "Base#initConfig",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "config",
                        "preventOriginalConfig"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Applies all class configs to this instance",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "config"
                },
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "optional": true,
                    "description": "True prevents the instance from getting an originalConfig property",
                    "name": "preventOriginalConfig"
                }
            ],
            "name": "initConfig",
            "longname": "Base#initConfig",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#initConfig",
            "$kind": "method",
            "id": 576,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Does get triggered with a delay to ensure that Neo.workerId & Neo.worker.Manager are defined\n     * Remote method access via promises\n     */",
            "meta": {
                "range": [
                    5854,
                    6685
                ],
                "filename": "Base.mjs",
                "lineno": 216,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021439",
                    "name": "Base#initRemote",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Does get triggered with a delay to ensure that Neo.workerId & Neo.worker.Manager are defined<br />Remote method access via promises",
            "name": "initRemote",
            "longname": "Base#initRemote",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#initRemote",
            "$kind": "method",
            "id": 577,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Override this method to change the order configs are applied to this instance.\n     * @param {Object} config\n     * @param {Boolean} [preventOriginalConfig] True prevents the instance from getting an originalConfig property\n     * @returns {Object} config\n     */",
            "meta": {
                "range": [
                    6970,
                    7365
                ],
                "filename": "Base.mjs",
                "lineno": 247,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021534",
                    "name": "Base#mergeConfig",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "config",
                        "preventOriginalConfig"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Override this method to change the order configs are applied to this instance.",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "config"
                },
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "optional": true,
                    "description": "True prevents the instance from getting an originalConfig property",
                    "name": "preventOriginalConfig"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "description": "config"
                }
            ],
            "name": "mergeConfig",
            "longname": "Base#mergeConfig",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#mergeConfig",
            "$kind": "method",
            "id": 578,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Processes all afterSet methods which would have been triggered before all configs got applied to resolve cross dependencies\n     * @private\n     */",
            "meta": {
                "range": [
                    7534,
                    7813
                ],
                "filename": "Base.mjs",
                "lineno": 266,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021587",
                    "name": "Base#processAfterSetQueue",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "Processes all afterSet methods which would have been triggered before all configs got applied to resolve cross dependencies",
            "access": "private",
            "name": "processAfterSetQueue",
            "longname": "Base#processAfterSetQueue",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "params": [],
            "$longname": "Base#processAfterSetQueue",
            "$kind": "method",
            "id": 579,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * Sets the value of a static config by a given key\n     * @param {String} key The key of a staticConfig defined inside static getStaticConfig\n     * @param {*} value\n     * @returns {Boolean} true in case the confic exists and got changed\n     */",
            "meta": {
                "range": [
                    8079,
                    8318
                ],
                "filename": "Base.mjs",
                "lineno": 284,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021634",
                    "name": "Base#setStaticConfig",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "key",
                        "value"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Sets the value of a static config by a given key",
            "params": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    },
                    "description": "The key of a staticConfig defined inside static getStaticConfig",
                    "name": "key"
                },
                {
                    "type": {
                        "names": [
                            "*"
                        ]
                    },
                    "name": "value"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    },
                    "description": "true in case the confic exists and got changed"
                }
            ],
            "name": "setStaticConfig",
            "longname": "Base#setStaticConfig",
            "kind": "function",
            "memberof": "Base",
            "scope": "instance",
            "$longname": "Base#setStaticConfig",
            "$kind": "method",
            "id": 580,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * <p>Enhancing the toString() method, e.g.</p>\n     * `Neo.create('Neo.component.Button').toString() => \"[object Neo.component.Button (neo-button-1)]\"`\n     * @returns {String}\n     */",
            "meta": {
                "range": [
                    8522,
                    8613
                ],
                "filename": "Base.mjs",
                "lineno": 305,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021665",
                    "name": "Base#Symbol.toStringTag",
                    "type": "MethodDefinition",
                    "paramnames": []
                },
                "vars": {
                    "": null
                }
            },
            "description": "<p>Enhancing the toString() method, e.g.</p><br />`Neo.create('Neo.component.Button').toString() => \"[object Neo.component.Button (neo-button-1)]\"`",
            "returns": [
                {
                    "type": {
                        "names": [
                            "String"
                        ]
                    }
                }
            ],
            "name": "toStringTag",
            "longname": "Base#Symbol.toStringTag",
            "kind": "member",
            "memberof": "Base#Symbol",
            "scope": "static",
            "params": [],
            "$longname": "Base#Symbol.toStringTag",
            "$kind": "property",
            "id": 581,
            "neoClassName": "Neo.core.Base"
        },
        {
            "comment": "/**\n     * <p>Enhancing the instanceof method. Without this change:</p>\n     * `Neo.collection.Base.prototype instanceof Neo.core.Base => true`\n     * <p>With this change:</p>\n     * `Neo.collection.Base.prototype instanceof Neo.core.Base => false`<br>\n     * `Neo.create(Neo.collection.Base) instanceof Neo.core.Base => true`\n     * @returns {Boolean}\n     */",
            "meta": {
                "range": [
                    8984,
                    9182
                ],
                "filename": "Base.mjs",
                "lineno": 312,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/core",
                "code": {
                    "id": "astnode100021683",
                    "name": "Base.Symbol.hasInstance",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "instance"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "<p>Enhancing the instanceof method. Without this change:</p><br />`Neo.collection.Base.prototype instanceof Neo.core.Base => true`<br /><p>With this change:</p><br />`Neo.collection.Base.prototype instanceof Neo.core.Base => false`<br><br />`Neo.create(Neo.collection.Base) instanceof Neo.core.Base => true`",
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "hasInstance",
            "longname": "Base.Symbol.hasInstance",
            "kind": "function",
            "memberof": "Base.Symbol",
            "scope": "static",
            "params": [],
            "$longname": "Base.Symbol.hasInstance",
            "$kind": "method",
            "id": 582,
            "neoClassName": "Neo.core.Base"
        }
    ]
}