{
    "classData": [
        {
            "comment": "/**\n * @class Neo.util.Object\n * @extends Neo.core.Base\n */",
            "meta": {
                "filename": "Object.mjs",
                "lineno": 3,
                "columnno": 0,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/util",
                "code": {}
            },
            "kind": "class",
            "name": "Object",
            "augments": [
                "Neo.core.Base"
            ],
            "memberof": "Neo.util",
            "longname": "Neo.util.Object",
            "scope": "static",
            "$longname": "Neo.util.Object",
            "$kind": "class",
            "id": 1827,
            "neoClassName": "Neo.util.Object"
        },
        {
            "comment": "/**\n     * Returns true if all properties of x match with the properties of y\n     * Supports nested Objects, but not arrays as prop values\n     * @param {Object} x\n     * @param {Object} y\n     * @returns {Boolean}\n     */",
            "meta": {
                "range": [
                    439,
                    790
                ],
                "filename": "Object.mjs",
                "lineno": 19,
                "columnno": 4,
                "path": "/Users/Shared/github/workspace/node_modules/neo.mjs/src/util",
                "code": {
                    "id": "astnode100058671",
                    "name": "NeoObject.isEqual",
                    "type": "MethodDefinition",
                    "paramnames": [
                        "x",
                        "y"
                    ]
                },
                "vars": {
                    "": null
                }
            },
            "description": "Returns true if all properties of x match with the properties of y<br />Supports nested Objects, but not arrays as prop values",
            "params": [
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "x"
                },
                {
                    "type": {
                        "names": [
                            "Object"
                        ]
                    },
                    "name": "y"
                }
            ],
            "returns": [
                {
                    "type": {
                        "names": [
                            "Boolean"
                        ]
                    }
                }
            ],
            "name": "isEqual",
            "longname": "NeoObject.isEqual",
            "kind": "function",
            "memberof": "NeoObject",
            "scope": "static",
            "$longname": "NeoObject.isEqual",
            "$kind": "method",
            "id": 1828,
            "neoClassName": "Neo.util.Object"
        }
    ]
}